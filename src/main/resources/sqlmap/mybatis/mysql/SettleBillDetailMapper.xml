<?xml version="1.0" encoding="UTF-8" ?>
<!--suppress ALL -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanyun.platform.settle.dao.SettleBillDetailDao">
    <resultMap id="BaseResultMap" type="com.hanyun.platform.settle.domain.SettleBillDetail">
        <result column="pay_id" property="payId" jdbcType="VARCHAR"/>
        <result column="brand_id" property="brandId" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="order_time" property="orderTime" jdbcType="TIMESTAMP"/>
        <result column="order_amount" property="orderAmount" jdbcType="BIGINT"/>
        <result column="pay_amount" property="payAmount" jdbcType="BIGINT"/>
        <result column="pay_type" property="payType" jdbcType="VARCHAR"/>
        <result column="type_category" property="typeCategory" jdbcType="VARCHAR"/>
        <result column="settle_type" property="settleType" jdbcType="BIT"/>
        <result column="operate_type" property="operateType" jdbcType="SMALLINT"/>
        <result column="amount" property="amount" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="SMALLINT"/>
        <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP"/>
        <result column="trans_id" property="transId" jdbcType="VARCHAR"  />
        <result column="solve_time" property="solveTime" jdbcType="TIMESTAMP"/>
        <result column="diff_status" property="diffStatus" jdbcType="TINYINT"/>
        <result column="mch_fee" property="mchFee" jdbcType="INTEGER"/>
        <result column="mch_fee_rate" property="mchFeeRate" jdbcType="INTEGER"/>
        <result column="mch_fee_max" property="mchFeeMax" jdbcType="INTEGER"/>
        <result column="report_time" property="reportTime" jdbcType="TIMESTAMP"/>
        <result column="diff_src" property="diffSrc" jdbcType="SMALLINT"/>
        <result column="diff_type" property="diffType" jdbcType="SMALLINT"/>
        <result column="order_document_id" property="orderDocumentId" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 正常情况的明细数据 不包括异常订单-->
    <select id="selectForGenSettlement" parameterType="com.hanyun.platform.settle.vo.settlebill.SettleBillDetailParam" resultMap="BaseResultMap">
        SELECT
        b.brand_id,
        b.store_id,
        b.pay_type,
        b.mch_fee,
        b.settle_type,
        b.operate_type,
        b.amount,
        b.`status`,
        b.finish_time,
        b.type_category,
        b.trans_id
        FROM
        pay_transaction AS b
        <where>
            b.brand_id=#{brandId}
            <if test="storeId != null and storeId !=''">
                and b.store_id=#{storeId}
            </if>
            AND b.status = 20
            AND (b.finish_time BETWEEN #{startTime} AND #{endTime})
        </where>
    </select>


    <!-- 已解决差异 明细-->
    <select id="selectSolvedDiffSettlement" parameterType="com.hanyun.platform.settle.vo.settlebill.SettleBillDetailParam" resultMap="BaseResultMap">
        SELECT
        b.brand_id,
        b.store_id,
        b.pay_type,
        b.mch_fee_rate,
        b.mch_fee_max,
        b.mch_fee,
        b.settle_type,
        b.operate_type,
        b.amount,
        b.`status`,
        b.finish_time,
        b.trans_id,
        b.type_category,
        c.solve_time,
        c.diff_status,
        c.diff_type
        FROM
        pay_transaction AS b
        LEFT JOIN statement_diff AS c ON b.trans_id = c.trans_id
        <where>
            b.brand_id=#{brandId}
            <if test="storeId != null and storeId !=''">
                AND b.store_id=#{storeId}
            </if>
            AND b.settle_type = 0
            AND diff_status = 10
            AND b.status = 20
            AND (solve_time BETWEEN  #{startTime} AND  #{endTime})
        </where>
    </select>

    <!-- 新增差异 明细-->
    <select id="selectUnSolvedDiffSettlement" parameterType="com.hanyun.platform.settle.vo.settlebill.SettleBillDetailParam" resultMap="BaseResultMap">
        SELECT
        b.brand_id,
        b.store_id,
        b.pay_type,
        b.mch_fee_rate,
        b.mch_fee_max,
        b.mch_fee,
        b.settle_type,
        b.operate_type,
        b.amount,
        b.`status`,
        b.finish_time,
        b.type_category,
        b.trans_id,
        c.solve_time,
        c.diff_status,
        c.diff_type
        FROM statement_diff AS c
        LEFT JOIN pay_transaction AS b ON b.trans_id = c.trans_id
        <where>
            b.brand_id=#{brandId}
            <if test="storeId != null and storeId !=''">
                AND b.store_id=#{storeId}
            </if>
            AND b.settle_type = 0
            AND b.status = 20
            AND (b.finish_time BETWEEN  #{startTime} AND  #{endTime})
        </where>
    </select>

    <!-- 结算明细中新增对账差异列表-->
    <select id="getAddSettleDiffDetailList"  resultMap="BaseResultMap">
        SELECT
        c.brand_id,
        c.store_id,
        b.order_document_id,
        b.mch_fee,
        b.operate_type,
        b.pay_type,
        b.amount,
        b.`status`,
        b.finish_time,
        c.solve_time,
        c.diff_status,
        c.diff_type,
        c.trans_id
        FROM statement_diff AS c
        LEFT JOIN pay_transaction AS b ON b.trans_id = c.trans_id
        <where>
            c.brand_id=#{brandId}
            <if test="storeId != null and storeId !=''">
                AND c.store_id=#{storeId}
            </if>
            AND b.status = 20
            AND (b.finish_time BETWEEN  #{tradeDateStart} AND  #{tradeDateEnd})
        </where>
    </select>



    <!--结算明细中对账差异列表-->
    <select id="getSettleDiffDetailList" resultMap="BaseResultMap">
        SELECT
        b.brand_id,
        b.store_id,
        b.order_document_id,
        b.pay_type,
        b.operate_type,
        b.amount,
        b.finish_time,
        b.`status`,
        b.trans_id,
        b.mch_fee,
        c.solve_time,
        c.diff_status,
        c.diff_type,
        c.trans_id
        FROM
        pay_transaction AS b
        LEFT JOIN statement_diff AS c ON b.trans_id = c.trans_id
        <where>
            b.brand_id=#{brandId}
            <if test="storeId!=null and storeId!='' ">
                AND b.store_id=#{storeId}
            </if>
            AND c.diff_status = 10
            AND b.status = 20
            AND (solve_time BETWEEN  #{tradeDateStart} AND  #{tradeDateEnd})

        </where>
    </select>

    <!--结算单销售明细-->
    <select id="getSettleDetailList" resultMap="BaseResultMap">
        SELECT
        order_id,
        pay_type,
        mch_fee,
        operate_type,
        amount,
        order_document_id,
        finish_time,
        trans_id
        FROM
        pay_transaction
        <where>
            brand_id=#{brandId}
            <if test="storeId!=null and storeId!='' ">
                AND store_id=#{storeId}
            </if>
            AND status = 20
            AND operate_type = 1
            AND (finish_time BETWEEN #{tradeDateStart} AND #{tradeDateEnd})
        </where>
        LIMIT #{beginIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>
    <!--结算单常规明细总数量-->
    <select id="getSettleDetailListCount"  resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        pay_transaction
        <where>
            brand_id=#{brandId}
            <if test="storeId!=null and storeId!='' ">
                AND store_id=#{storeId}
            </if>
            AND status = 20
            AND operate_type = 1
            AND (finish_time BETWEEN #{tradeDateStart} AND #{tradeDateEnd})

        </where>

    </select>

    <!--结算单退款明细-->
    <select id="getSettleRefundDetailList" resultMap="BaseResultMap">
        SELECT
        order_id,
        pay_type,
        mch_fee,
        operate_type,
        amount,
        order_document_id,
        finish_time
        FROM
        pay_transaction
        <where>
            brand_id=#{brandId}
            <if test="storeId!=null and storeId!='' ">
                AND store_id=#{storeId}
            </if>
            AND status = 20
            AND operate_type = 2
            AND (finish_time BETWEEN #{tradeDateStart} AND #{tradeDateEnd})
        </where>
    </select>

    <!-- 差异统计 如果diffstatus为0 新增差异，10则为解决差异-->
    <select id="getDiffStatistics" resultType="com.hanyun.platform.settle.vo.PayTypeVo"  parameterType="com.hanyun.platform.settle.vo.PayTypeReq">
        SELECT
            count(*) payTypeCount,
            sum(b.amount) payTypeTotalAmount,
            sum(b.mch_fee) payTypeFee
        FROM
        pay_transaction AS b
        LEFT JOIN statement_diff AS c ON b.trans_id = c.trans_id
        <where>
            b.brand_id=#{brandId}
            <if test="storeId!=null and storeId!='' ">
                AND b.store_id=#{storeId}
            </if>
            <if test="typeCategory!=null">
                AND b.type_category=#{typeCategory}
            </if>
            <if test="diffStatus!=null">
                AND c.diff_status=#{diffStatus}
            </if>
            AND b.status = 20
            AND (solve_time BETWEEN  #{tradeDateStart} AND  #{tradeDateEnd})
        </where>
    </select>

    <!-- 销售数据和退款数据统计 operateType 1为 扣款，2则退款-->
    <select id="getPayTransStatistics" resultType="com.hanyun.platform.settle.vo.PayTypeVo" parameterType="com.hanyun.platform.settle.vo.PayTypeReq">
        SELECT
            count(*) payTypeCount,
            sum(amount) payTypeTotalAmount,
            sum(mch_fee) payTypeFee
        FROM
            pay_transaction
        <where>
            brand_id=#{brandId}
            <if test="storeId!=null and storeId!='' ">
                AND store_id=#{storeId}
            </if>
            <if test="operateType!=null">
                AND operate_type=#{operateType}
            </if>
            <if test="typeCategory!=null">
                AND type_category=#{typeCategory}
            </if>
            AND status = 20
            AND (finish_time BETWEEN #{tradeDateStart} AND #{tradeDateEnd})
        </where>
    </select>


</mapper>